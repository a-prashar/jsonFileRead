# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FSi4tPAbWJH_fh7QmfcmFfWB50FemxlA
"""

## pip install pyspark
!pip install -q pyspark

## Creating Spark Session
from pyspark.sql import SparkSession
spark= SparkSession.builder.appName("test-app").getOrCreate()


rest_json_df = spark.read.json("/file1.json")

from pyspark.sql.functions import *
from pyspark.sql.types import *

rest_json_df.printSchema()

rest_json_df.select("*", explode("restaurants").alias("new_rest")).\
drop("restaurants").select("new_rest.restaurant.R.res_id", "new_rest.restaurant.name",
                           "new_rest.restaurant.currency",
                           "new_rest.restaurant.location.city",
                           "new_rest.restaurant.location.country_id",
                           "new_rest.restaurant.location.locality",
                           "new_rest.restaurant.price_range",
                           "new_rest.restaurant.user_rating.rating_text",
                           "new_rest.restaurant.user_rating.rating_color",
                           "new_rest.restaurant.user_rating.votes",
                           explode("new_rest.restaurant.offers").alias("offers_new")).\
                           drop("offers").printSchema()

exploded_rest_df=rest_json_df.select("*", explode("restaurants").alias("new_rest")).\
drop("restaurants").select("new_rest.restaurant.R.res_id", "new_rest.restaurant.name",
                           "new_rest.restaurant.currency",
                           "new_rest.restaurant.location.city",
                           "new_rest.restaurant.location.country_id",
                           "new_rest.restaurant.location.locality",
                           "new_rest.restaurant.price_range",
                           "new_rest.restaurant.user_rating.rating_text",
                           "new_rest.restaurant.user_rating.rating_color",
                           "new_rest.restaurant.user_rating.votes",
                           explode("new_rest.restaurant.offers").alias("offers_new")).\
                           drop("offers")

exploded_rest_df.select("*","offers_new.offer.disclaimer").drop("offers_new").show(truncate= False)

